name: Docker

on:
  workflow_dispatch:
    inputs:
      image_tags:
        description: 'Comma-separated image tags (e.g. v1.0,latest)'
        required: true
        default: 'latest'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install cosign for non-PR runs
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login to container registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for automated builds
      - name: Extract Docker metadata (for non-manual runs)
        if: github.event_name != 'workflow_dispatch'
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Prepare tags for manual runs
      - name: Prepare manual tags
        if: github.event_name == 'workflow_dispatch'
        id: manual-tags
        run: |
          # Split comma-separated tags into array
          TAGS_ARRAY=(${{ github.event.inputs.image_tags }})
          
          # Format tags with registry prefix
          FORMATTED_TAGS=()
          for tag in "${TAGS_ARRAY[@]}"; do
            FORMATTED_TAGS+=("${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$tag")
          done
          
          # Join tags with comma
          TAGS_STR=$(IFS=,; echo "${FORMATTED_TAGS[*]}")
          echo "tags=$TAGS_STR" >> $GITHUB_OUTPUT

      # Build and push Docker image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ github.event_name == 'workflow_dispatch' && steps.manual-tags.outputs.tags || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the Docker image
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ github.event_name == 'workflow_dispatch' && steps.manual-tags.outputs.tags || steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: |
          # Convert comma-separated tags to array
          IFS=',' read -ra TAGS_ARRAY <<< "$TAGS"
          
          # Sign each tag
          for tag in "${TAGS_ARRAY[@]}"; do
            cosign sign --yes "${tag}@${DIGEST}"
          done
